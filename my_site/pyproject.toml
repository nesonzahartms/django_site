[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "TMS"
version = "0.1.0"
description = "TMS Python lessons"
authors = ["Zahar Neson <nesonzahar@gmail.com>"]


[tool.poetry.dependencies]
python = "^3.11"
requests = "*"
pyyaml = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "^3.10.0"
pyright = "*"
psycopg = "*"
django = "*"



[tool.poetry.group.test]
optional = true


[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"


[tool.poetry.group.lint]
optional = true


[tool.poetry.group.lint.dependencies]
pyright = "*"


[tool.isort]
profile = "black"


[tool.mypy]
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
exclude = ["env/", ".venv/", "venv/"]


[tool.pylint.messages_control]
disable = "C0114, C0115, C0116, R0903, R1734, R1735, E0401, W1203, R1705, R0913, R0902, W0511, E1101"


[tool.pylint.format]
max-line-length = "88"


[tool.black]
include = "TMS"


[tool.coverage.run]
source = ["TMS"]


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "strict"
